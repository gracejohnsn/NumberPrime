"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var mock_error_1 = require("./mock-error");
var MockStorage = (function () {
    function MockStorage(options) {
        this.app_ = options.app;
    }
    Object.defineProperty(MockStorage.prototype, "app", {
        get: function () {
            return this.app_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MockStorage.prototype, "maxOperationRetryTime", {
        get: function () {
            throw mock_error_1.unsupported_();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MockStorage.prototype, "maxUploadRetryTime", {
        get: function () {
            throw mock_error_1.unsupported_();
        },
        enumerable: true,
        configurable: true
    });
    MockStorage.prototype.bucket = function (name) {
        throw mock_error_1.unsupported_();
    };
    MockStorage.prototype.ref = function (path) {
        throw mock_error_1.unsupported_();
    };
    MockStorage.prototype.refFromURL = function (url) {
        throw mock_error_1.unsupported_();
    };
    MockStorage.prototype.setMaxOperationRetryTime = function (time) {
        throw mock_error_1.unsupported_();
    };
    MockStorage.prototype.setMaxUploadRetryTime = function (time) {
        throw mock_error_1.unsupported_();
    };
    return MockStorage;
}());
exports.MockStorage = MockStorage;
