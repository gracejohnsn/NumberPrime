import { firebase } from "./firebase";
export interface MockUserOptions {
    email?: string;
    uid?: string;
}
export declare class MockUser implements firebase.User {
    displayName: string | null;
    email: string | null;
    emailVerified: boolean;
    isAnonymous: boolean;
    metadata: firebase.auth.UserMetadata;
    phoneNumber: string | null;
    photoURL: string | null;
    providerData: (firebase.UserInfo | null)[];
    providerId: string;
    refreshToken: string;
    uid: string;
    constructor(options: MockUserOptions);
    delete(): Promise<any>;
    getIdToken(forceRefresh?: boolean): Promise<any>;
    getToken(forceRefresh?: boolean): Promise<any>;
    link(credential: firebase.auth.AuthCredential): Promise<any>;
    linkAndRetrieveDataWithCredential(credential: firebase.auth.AuthCredential): Promise<any>;
    linkWithCredential(credential: firebase.auth.AuthCredential): Promise<any>;
    linkWithPhoneNumber(phoneNumber: string, applicationVerifier: firebase.auth.ApplicationVerifier): Promise<any>;
    linkWithPopup(provider: firebase.auth.AuthProvider): Promise<any>;
    linkWithRedirect(provider: firebase.auth.AuthProvider): Promise<any>;
    reauthenticate(credential: firebase.auth.AuthCredential): Promise<any>;
    reauthenticateAndRetrieveDataWithCredential(credential: firebase.auth.AuthCredential): Promise<any>;
    reauthenticateWithCredential(credential: firebase.auth.AuthCredential): Promise<any>;
    reauthenticateWithPhoneNumber(phoneNumber: string, applicationVerifier: firebase.auth.ApplicationVerifier): Promise<any>;
    reauthenticateWithPopup(provider: firebase.auth.AuthProvider): Promise<any>;
    reauthenticateWithRedirect(provider: firebase.auth.AuthProvider): Promise<any>;
    reload(): Promise<any>;
    sendEmailVerification(): Promise<any>;
    toJSON(): Object;
    unlink(providerId: string): Promise<any>;
    updateEmail(email: string): Promise<any>;
    updatePassword(password: string): Promise<any>;
    updatePhoneNumber(phoneCredential: firebase.auth.AuthCredential): Promise<any>;
    updateProfile(profile: {
        displayName: string | null;
        photoURL: string | null;
    }): Promise<any>;
}
