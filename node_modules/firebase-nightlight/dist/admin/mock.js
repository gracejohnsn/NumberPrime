"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var mock_untyped_1 = require("../mock-untyped");
var Mock = (function () {
    function Mock(options) {
        this.untyped_ = new mock_untyped_1.MockUntyped(options);
    }
    Object.defineProperty(Mock.prototype, "apps", {
        get: function () {
            return this.untyped_.apps;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Mock.prototype, "SDK_VERSION", {
        get: function () {
            return this.untyped_.SDK_VERSION;
        },
        enumerable: true,
        configurable: true
    });
    Mock.prototype.app = function (name) {
        return name ? this.untyped_.app() : this.untyped_.app(name);
    };
    Mock.prototype.auth = function (app) {
        return name ? this.untyped_.auth() : this.untyped_.auth(app);
    };
    Mock.prototype.database = function (app) {
        return name ? this.untyped_.database() : this.untyped_.database(app);
    };
    Mock.prototype.initializeApp = function (options, name) {
        return name ? this.untyped_.initializeApp(options) : this.untyped_.initializeApp(options, name);
    };
    Mock.prototype.messaging = function (app) {
        return name ? this.untyped_.messaging() : this.untyped_.messaging(app);
    };
    Mock.prototype.storage = function (app) {
        return name ? this.untyped_.storage() : this.untyped_.storage(app);
    };
    return Mock;
}());
exports.Mock = Mock;
